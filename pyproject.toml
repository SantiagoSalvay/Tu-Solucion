[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tu-solucion"
version = "1.0.0"
description = "Sistema de Gestión de Catering"
authors = [
    {name = "Tu Solución", email = "info@tusolucion.com"}
]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "Django>=4.2.0",
    "mysqlclient>=2.1.0",
    "django-crispy-forms>=2.0",
    "crispy-bootstrap5>=0.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-django>=4.5.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
]

[tool.setuptools.packages.find]
include = ["catering*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tu_solucion.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["catering"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Pylance/Django specific configuration
[tool.pyright]
include = ["."]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/venv",
    "**/.venv",
    "**/migrations",
    "**/static",
    "**/media"
]
ignore = [
    "**/migrations/**",
    "**/static/**",
    "**/media/**"
]
reportMissingImports = false
reportMissingTypeStubs = false
reportMissingModuleSource = false
reportAttributeAccessIssue = false
reportMethodAccessIssue = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportOptionalIterable = false
reportOptionalContextManager = false
reportOptionalOperand = false
reportUntypedFunctionDecorator = false
reportUntypedClassDecorator = false
reportUntypedBaseClass = false
reportUntypedNamedTuple = false
reportPrivateUsage = false
reportConstantRedefinition = false
reportIncompatibleMethodOverride = false
reportIncompatibleVariableOverride = false
reportInconsistentConstructor = false
pythonVersion = "3.8"
pythonPlatform = "Windows"
executionEnvironments = [
    {
        "root": ".",
        "pythonVersion": "3.8",
        "pythonPlatform": "Windows",
        "extraPaths": [
            "./venv/Lib/site-packages",
            "./venv/Scripts"
        ]
    }
]
stubPath = "./typings"
venvPath = "./venv"
venv = "venv"
